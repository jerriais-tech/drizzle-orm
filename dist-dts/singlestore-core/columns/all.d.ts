import { bigint } from './bigint.ts';
import { binary } from './binary.ts';
import { boolean } from './boolean.ts';
import { char } from './char.ts';
import { customType } from './custom.ts';
import { date } from './date.ts';
import { datetime } from './datetime.ts';
import { decimal } from './decimal.ts';
import { double } from './double.ts';
import { singlestoreEnum } from './enum.ts';
import { float } from './float.ts';
import { int } from './int.ts';
import { json } from './json.ts';
import { mediumint } from './mediumint.ts';
import { real } from './real.ts';
import { serial } from './serial.ts';
import { smallint } from './smallint.ts';
import { longtext, mediumtext, text, tinytext } from './text.ts';
import { time } from './time.ts';
import { timestamp } from './timestamp.ts';
import { tinyint } from './tinyint.ts';
import { varbinary } from './varbinary.ts';
import { varchar } from './varchar.ts';
import { vector } from './vector.ts';
import { year } from './year.ts';
export declare function getSingleStoreColumnBuilders(): {
    bigint: typeof bigint;
    binary: typeof binary;
    boolean: typeof boolean;
    char: typeof char;
    customType: typeof customType;
    date: typeof date;
    datetime: typeof datetime;
    decimal: typeof decimal;
    double: typeof double;
    singlestoreEnum: typeof singlestoreEnum;
    float: typeof float;
    int: typeof int;
    json: typeof json;
    mediumint: typeof mediumint;
    real: typeof real;
    serial: typeof serial;
    smallint: typeof smallint;
    longtext: typeof longtext;
    mediumtext: typeof mediumtext;
    text: typeof text;
    tinytext: typeof tinytext;
    time: typeof time;
    timestamp: typeof timestamp;
    tinyint: typeof tinyint;
    varbinary: typeof varbinary;
    varchar: typeof varchar;
    vector: typeof vector;
    year: typeof year;
};
export type SingleStoreColumnBuilders = ReturnType<typeof getSingleStoreColumnBuilders>;
